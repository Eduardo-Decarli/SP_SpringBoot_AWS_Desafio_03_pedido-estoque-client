openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/stock/{id}:
    put:
      tags:
        - stock-controller
      summary: Update product in stock
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateDTO'
        required: true
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - stock-controller
      summary: Delete product by ID
      operationId: deleteProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product deleted successfully
          content:
            '*/*':
              schema:
                type: string
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/stock:
    get:
      tags:
        - stock-controller
      summary: Get all products in stock
      operationId: findAllProducts
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
    post:
      tags:
        - stock-controller
      summary: Create a new product in stock
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateDTO'
        required: true
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/stock/quantity/remove/{quantity}/{name}:
    get:
      tags:
        - stock-controller
      summary: Remove quantity to product in stock
      operationId: removeQuantity
      parameters:
        - name: quantity
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Quantity removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/stock/quantity/add/{quantity}/{name}:
    get:
      tags:
        - stock-controller
      summary: Add quantity to product in stock
      operationId: addQuantity
      parameters:
        - name: quantity
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Quantity added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/stock/product/name/{name}:
    get:
      tags:
        - stock-controller
      summary: Get product by name
      operationId: findProductByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product found by name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/stock/product/id/{id}:
    get:
      tags:
        - stock-controller
      summary: Get product by ID
      operationId: findProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product found by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
components:
  schemas:
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ProductResponseDTO:
      required:
        - name
        - quantity
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        quantity:
          type: integer
          format: int32
        _links:
          $ref: '#/components/schemas/Links'
    ErrorMessage:
      type: object
      properties:
        path:
          type: string
        method:
          type: string
        status:
          type: integer
          format: int32
        statusText:
          type: string
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    ProductCreateDTO:
      required:
        - name
        - quantity
      type: object
      properties:
        name:
          type: string
        quantity:
          type: integer
          format: int32
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
