openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: Stock API
    description: API for managing product stock
paths:
  /api/v1/stock/{id}:
    put:
      tags:
        - Stock API
      summary: Update a product
      description: Updates the details of an existing product
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateDTO'
        required: true
      responses:
        '201':
          description: Product successfully updated
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Invalid data
          content:
            '*/*':
              schema:
                type: string
  /api/v1/stock:
    get:
      tags:
        - Stock API
      summary: Get all products
      description: Return a list of all products in the stock
      operationId: findAllProducts
      responses:
        '200':
          description: List all products successfully
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponseDTO'
        '404':
          description: Products not found
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
        - Stock API
      summary: Create a new product
      description: Add a new product to the stock
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateDTO'
        required: true
      responses:
        '201':
          description: Product successfully created
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Invalid product data
          content:
            '*/*':
              schema:
                type: string
  /api/v1/stock/quantity/remove/{quantity}/{name}:
    get:
      tags:
        - Stock API
      summary: Remove product quantity
      description: Removes a specified quantity from a product in stock
      operationId: removeQuantity
      parameters:
        - name: quantity
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Quantity removed successfully
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Invalid data
          content:
            '*/*':
              schema:
                type: string
        '404':
          description: Product not found
          content:
            '*/*':
              schema:
                type: string
  /api/v1/stock/quantity/add/{quantity}/{name}:
    get:
      tags:
        - Stock API
      summary: Add product quantity
      description: Add a specified quantity to a product in stock
      operationId: addQuantity
      parameters:
        - name: quantity
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Quantity added successfully
          content:
            '*/*':
              schema:
                type: string
        '404':
          description: Product not found
          content:
            '*/*':
              schema:
                type: string
  /api/v1/stock/product/name/{name}:
    get:
      tags:
        - Stock API
      summary: find product by name
      description: Retrieves a product by name
      operationId: findProductByName
      parameters:
        - name: name
          in: path
          description: Name of the product
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product retrieved successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        '404':
          description: Product not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
  /api/v1/stock/product/id/{id}:
    get:
      tags:
        - Stock API
      summary: Get product by ID
      description: Retrieves a product by ID
      operationId: findProductById
      parameters:
        - name: id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product retrieved successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        '404':
          description: Product not found
          content:
            '*/*':
              schema:
                $ref:
  /api/v1/stock/product/{id}:
    delete:
      tags:
        - Stock API
      summary: Delete product by ID
      description: Delete a product by ID
      operationId: deleteProductById
      parameters:
        - name: id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product deleted successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        '404':
          description: Product not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
components:
  schemas:
    ProductCreateDTO:
      type: object
      properties:
        name:
          type: string
        quantity:
          type: integer
          format: int32
    ProductResponseDTO:
      type: object
      properties:
        name:
          type: string
        quantity:
          type: integer
          format: int32
