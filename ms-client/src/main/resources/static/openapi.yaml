openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8082
    description: Generated server url
paths:
  /api/v1/client/{id}:
    get:
      tags:
        - client-controller
      summary: Get client by ID
      operationId: findClientById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Client found by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponseDTO'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - client-controller
      summary: Update client by ID
      operationId: updateClientById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreateDTO'
        required: true
      responses:
        '200':
          description: Client updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponseDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
        - client-controller
      summary: Delete client by ID
      operationId: deleteClientById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Client deleted successfully
          content:
            '*/*':
              schema:
                type: string
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/client/email/{email}:
    get:
      tags:
        - client-controller
      summary: Get client by email
      operationId: findClientByEmail
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Client found by email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponseDTO'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      tags:
        - client-controller
      summary: Update client by email
      operationId: updateClientByEmail
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreateDTO'
        required: true
      responses:
        '200':
          description: Client updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponseDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/client:
    get:
      tags:
        - client-controller
      summary: Get all clients
      operationId: findAllClients
      responses:
        '200':
          description: List of clients
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponseDTO'
        '404':
          description: List not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
        - client-controller
      summary: Create a new client
      operationId: createClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreateDTO'
        required: true
      responses:
        '201':
          description: Client created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponseDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
components:
  schemas:
    ClientResponseDTO:
      required:
        - email
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ErrorMessage:
      type: object
      properties:
        path:
          type: string
        method:
          type: string
        status:
          type: integer
          format: int32
        statusText:
          type: string
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    ClientCreateDTO:
      required:
        - email
        - name
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
